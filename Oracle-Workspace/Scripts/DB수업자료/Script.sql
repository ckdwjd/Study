CREATE USER SEMI IDENTIFIED BY SEMI;

GRANT CONNECT,RESOURCE TO SEMI;








SELECT  SUBSTR('dasdasdad',5)
FROM DUAL;

CREATE SEQUENCE SEQ_GNO;


INSERT INTO MEMBERGRADE E
VALUES('MG'||SEQ_GRADE_NO.NEXTVAL, '미니하우스' , 0, 0 );

INSERT INTO MEMBERGRADE E
VALUES('MG'||SEQ_GRADE_NO.NEXTVAL, '하우스' , 1, 100000 );

INSERT INTO MEMBERGRADE E
VALUES('MG'||SEQ_GRADE_NO.NEXTVAL, '빌리지' , 100000, 500000 );

INSERT INTO MEMBERGRADE E
VALUES('MG'||SEQ_GRADE_NO.NEXTVAL, '타운' , 500000, 1000000 );


INSERT INTO DONATION d 
VALUES(
		'DO' || SEQ_DONATION_NO.NEXTVAL, 1000000, '정기후원', SYSDATE, 'ckdwjd2717'
		);


INSERT INTO BOARD b 
VALUES(
		'BO' || SEQ_BOARD_NO.NEXTVAL, '안녕하세요', '후기', 'ㅇㅁㄴㅇㄴㅁㅇㅁㅇㅁ', SYSDATE, 123, 'ckdwjd2717', 'Y'
		);
	
	
SELECT BOARD_NO, BOARD_TITLE, BOARD_CATEGORY, BOARD_CONTENT, CREATE_DATE, COUNT, USER_NAME, b.STATUS
FROM BOARD b
JOIN MEMBER ON (WRITER_NO = USER_NO)
WHERE USER_ID = 'ckdwjd2717';



SELECT COUNT(*) "TOTAL"
FROM BOARD b 
JOIN MEMBER ON (WRITER_NO = USER_NO)
WHERE USER_ID = 'ckdwjd2717';
	
	
	

SELECT DONATION_NO, DONA_PRICE, DONA_KIND, DONA_DATE, USER_ID
FROM DONATION
JOIN MEMBER USING (USER_NO)
WHERE USER_ID = 'ckdwjd2717';


SELECT COUNT(*) "TOTAL", SUM(DONA_PRICE) "SUM" 
FROM DONATION
JOIN MEMBER USING (USER_NO)
WHERE USER_ID = 'ckdwjd2717';

SELECT SUM(DONA_PRICE)
FROM DONATION
JOIN MEMBER USING (USER_NO)
WHERE USER_ID = 'ckdwjd2717';




SELECT *
FROM MEMBERGRADE
LEFT JOIN MEMBER USING (GRADE_NO)
WHERE USER_ID = 'ckdwjd2717';





SELECT *
FROM(
	SELECT ROWNUM RNUM , A.*
	FROM (
		SELECT REPORT_NO, REPORT_CONTENT, r.CREATE_DATE, USER_NAME, r.STATUS
		FROM REPORT r
		JOIN BOARD USING(BOARD_NO)
		JOIN MEMBER ON(WRITER_NO = USER_NO)
		WHERE r.STATUS = 'Y') A
	);

SELECT COUNT(*)
FROM MEMBER
WHERE STATUS = 'Y'
	AND (USER_NO LIKE '오창정' OR EMAIL LIKE '오창정' OR USER_NAME LIKE '오창정' OR USER_ID LIKE '오창정');




SELECT *
FROM(
	SELECT ROWNUM RNUM , A.*
	FROM (
		SELECT FAQ_NO, FAQ_TITLE, FAQ_CONTENT, f.CREATE_DATE, USER_NAME, f.STATUS
		FROM FAQ f
		JOIN MEMBER USING(USER_NO)
		WHERE f.STATUS = 'Y') A
		)
WHERE RNUM BETWEEN 1 AND 5;



SELECT *
		FROM(
			SELECT ROWNUM RNUM , A.*
			FROM (
				SELECT FAQ_NO, FAQ_TITLE, FAQ_CONTENT, CREATE_DATE, USER_NAME, f.STATUS
				FROM FAQ f
				JOIN MEMBER m ON(f.USER_NO = m.USER_NO)
				WHERE f.STATUS = 'Y'
					AND (FAQ_NO LIKE 1 OR FAQ_TITLE LIKE 1 OR FAQ_CONTENT LIKE 1 OR f.USER_NO LIKE 1)
				ORDER BY CREATE_DATE) A
				)
		WHERE RNUM BETWEEN 1 AND 5;

SELECT *
FROM(
	SELECT ROWNUM RNUM , A.*
	FROM (
		SELECT FAQ_NO, FAQ_TITLE, FAQ_CONTENT, CREATE_DATE, USER_NAME, f.STATUS
		FROM FAQ f
		JOIN MEMBER m ON(f.USER_NO = m.USER_NO)
		WHERE f.STATUS = 'Y'
			AND (FAQ_NO LIKE '%a%' OR FAQ_TITLE LIKE '%a%' OR FAQ_CONTENT LIKE '%a%' OR f.USER_NO LIKE '%a%')
		ORDER BY f.USER_NO) A
		)
WHERE RNUM BETWEEN 1 AND 8;

SELECT *
		FROM(
			SELECT ROWNUM RNUM , A.*
			FROM (
				SELECT REPORT_NO, REPORT_CONTENT, r.CREATE_DATE, r.BOARD_NO, r.STATUS
				FROM REPORT r
				JOIN BOARD b ON(b.BOARD_NO = r.BOARD_NO)
				WHERE r.STATUS = 'Y') A)
		WHERE RNUM BETWEEN 1 AND 5;
	
	
	
	
	
	
	
SELECT m.USER_NO, USER_NAME, USER_ID, USER_PWD, PHONE, EMAIL, ADDRESS, ENROLL_DATE, GRADE_NAME, STATUS
FROM MEMBER m
JOIN DONATION d ON(m.USER_NO = d.USER_NO)
WHERE USER_ID = 'ckdwjd'
	AND STATUS = 'Y' 
	AND DONA_PRICE BETWEEN MIN_DONA AND MAX_DONA;







	
SELECT m.USER_NO, SUM(DONA_PRICE),
       CASE 
           WHEN SUM(DONA_PRICE) > 500000 THEN 'MG4'
           WHEN SUM(DONA_PRICE) > 10000 THEN 'MG3'
           WHEN SUM(DONA_PRICE) > 0 THEN 'MG2'
           ELSE 'MG1'
       END AS "GRADE_NO", 
       GRADE_NAME
FROM MEMBER m
JOIN MEMBERGRADE m2 ON(m.GRADE_NO = m2.GRADE_NO)
JOIN DONATION d ON (d.USER_NO = m.USER_NO)
WHERE USER_ID = 'ckdwjd' AND STATUS = 'Y'
GROUP BY m.USER_NO, m.GRADE_NO, GRADE_NAME;






SELECT *
FROM MEMBER
ORDER BY SUBSTR(USER_NO, 2);


SELECT *
FROM (
    SELECT ROWNUM RNUM, A.*
    FROM (
        SELECT USER_NO, USER_NAME, USER_ID, USER_PWD, PHONE, EMAIL, ADDRESS, ENROLL_DATE, GRADE_NO, STATUS
        FROM MEMBER m
        WHERE STATUS = 'Y'
        ORDER BY TO_NUMBER(SUBSTR(USER_NO, 3))  -- 'ME' 뒤에 있는 숫자를 숫자로 변환하여 정렬
    ) A
)
WHERE RNUM BETWEEN 1 AND 6;

SELECT *
FROM(
	SELECT ROWNUM RNUM , A.*
	FROM (
		SELECT USER_NO, USER_NAME, USER_ID, USER_PWD, PHONE, EMAIL, ADDRESS, ENROLL_DATE, GRADE_NO, STATUS
		FROM MEMBER m
		WHERE STATUS = 'Y'
			AND (USER_NO LIKE '%c%' OR EMAIL LIKE '%c%' OR USER_NAME LIKE '%c%' OR USER_ID LIKE '%c%')
		ORDER BY TO_NUMBER(SUBSTR(USER_NO, 3))
			) A
		)
WHERE RNUM BETWEEN 1 AND 6;





















CREATE USER MYBATIS IDENTIFIED BY MYBATIS;

GRANT RESOURCE, CONNECT TO MYBATIS;




















