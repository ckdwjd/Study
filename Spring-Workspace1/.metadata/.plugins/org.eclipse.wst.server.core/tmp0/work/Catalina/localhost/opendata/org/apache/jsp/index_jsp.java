/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-09-08 06:44:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<h2>실시간 대기오염 정보</h2>\n");
      out.write("\n");
      out.write("	지역 :\n");
      out.write("	<select id=\"location\">\n");
      out.write("		<option>서울</option>\n");
      out.write("		<option>경기</option>\n");
      out.write("		<option>대구</option>\n");
      out.write("		<option>대전</option>\n");
      out.write("		<option>부산</option>\n");
      out.write("	</select>\n");
      out.write("\n");
      out.write("	<button id=\"btn1\">실시간 대기오염 정보 확인(json방식)</button>\n");
      out.write("\n");
      out.write("	<button id=\"btn2\">실시간 대기오염 정보 확인(xml방식)</button>\n");
      out.write("\n");
      out.write("	<table id=\"result1\" border=\"1\" align=\"center\">\n");
      out.write("		<thead>\n");
      out.write("			<tr>\n");
      out.write("				<th>측정소명</th>\n");
      out.write("				<th>측정시간</th>\n");
      out.write("				<th>통합대기환경수치</th>\n");
      out.write("				<th>미세먼지농도</th>\n");
      out.write("				<th>일산화탄소농도</th>\n");
      out.write("				<th>이산화탄소농도</th>\n");
      out.write("				<th>아황산가스농도</th>\n");
      out.write("				<th>오존농도</th>\n");
      out.write("			</tr>\n");
      out.write("		</thead>\n");
      out.write("		<tbody>\n");
      out.write("\n");
      out.write("		</tbody>\n");
      out.write("	</table>\n");
      out.write("\n");
      out.write("	<script>\n");
      out.write("		$(() => {\n");
      out.write("			$(\"#btn1\").click(() => {\n");
      out.write("				$(\"#result1>tbody\").empty();\n");
      out.write("				$.ajax({\n");
      out.write("					url : 'air.do',\n");
      out.write("					data : {\"location\" : $(\"#location\").val()},\n");
      out.write("					success : function(data) {\n");
      out.write("						console.log(data);\n");
      out.write("						for(let item of data.response.body.items) {\n");
      out.write("							$(\"#result1>tbody\").append(\"<tr>\"\n");
      out.write("															+ \"<td>\" + item.stationName +\"</td>\"\n");
      out.write("															+ \"<td>\" + item.dataTime +\"</td>\"\n");
      out.write("															+ \"<td>\" + item.khaiValue +\"</td>\"\n");
      out.write("															+ \"<td>\" + item.pm10Value +\"</td>\"\n");
      out.write("															+ \"<td>\" + item.coValue +\"</td>\"\n");
      out.write("															+ \"<td>\" + item.no2Value +\"</td>\"\n");
      out.write("															+ \"<td>\" + item.so2Value +\"</td>\"\n");
      out.write("															+ \"<td>\" + item.o3Value +\"</td>\"\n");
      out.write("														+\"</tr>\");\n");
      out.write("						}\n");
      out.write("					}\n");
      out.write("				})\n");
      out.write("			})\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			$(\"#btn2\").click(() => {\n");
      out.write("				$(\"#result1>tbody\").empty();\n");
      out.write("				$.ajax({\n");
      out.write("					url:'air2.do',\n");
      out.write("					//data : {location : $(\"#location\").val()},\n");
      out.write("					success : data => {\n");
      out.write("						console.log(data);\n");
      out.write("						\n");
      out.write("						// 1. 응답데이터 안에 데이터가 담겨있는 요소선택(item요소)\n");
      out.write("						let item = $(data).find(\"item\");\n");
      out.write("\n");
      out.write("						// 2. 반복문을 이용해서 데이터가 담긴 요소들에 접근 후 동적으로 요소 생성\n");
      out.write("						item.each((index, value) => { // each => jQuery함수\n");
      out.write("							$(\"#result1>tbody\").append(\"<tr>\"\n");
      out.write("														+ \"<td>\" + $(value).find(\"stationName\").text() +\"</td>\"\n");
      out.write("														+ \"<td>\" + $(value).find(\"dataTime\").text() +\"</td>\"\n");
      out.write("														+ \"<td>\" + $(value).find(\"khaiValue\").text() +\"</td>\"\n");
      out.write("														+ \"<td>\" + $(value).find(\"pm10Value\").text() +\"</td>\"\n");
      out.write("														+ \"<td>\" + $(value).find(\"coValue\").text() +\"</td>\"\n");
      out.write("														+ \"<td>\" + $(value).find(\"no2Value\").text() +\"</td>\"\n");
      out.write("														+ \"<td>\" + $(value).find(\"so2Value\").text() +\"</td>\"\n");
      out.write("														+ \"<td>\" + $(value).find(\"o3Value\").text() +\"</td>\"\n");
      out.write("													+\"</tr>\")\n");
      out.write("						})\n");
      out.write("					}\n");
      out.write("				})\n");
      out.write("			})\n");
      out.write("		})\n");
      out.write("	</script>\n");
      out.write("\n");
      out.write("	<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n");
      out.write("\n");
      out.write("	<h2>서울시 노선 목록 조회</h2>\n");
      out.write("\n");
      out.write("	<button id=\"btn3\">노선 조회</button>\n");
      out.write("\n");
      out.write("	<br>\n");
      out.write("	<br>\n");
      out.write("\n");
      out.write("	<table id=\"result3\" border=\"1\">\n");
      out.write("\n");
      out.write("		<thead>\n");
      out.write("			<tr>\n");
      out.write("				<th>노선 ID</th>\n");
      out.write("				<th>노선명</th>\n");
      out.write("				<th>노선 길이(Km)</th>\n");
      out.write("				<th>노선 기점</th>\n");
      out.write("				<th>노선 종점</th>\n");
      out.write("				<th>운수사명</th>\n");
      out.write("			</tr>\n");
      out.write("		</thead>\n");
      out.write("		<tbody>\n");
      out.write("				\n");
      out.write("		</tbody>\n");
      out.write("\n");
      out.write("	</table>\n");
      out.write("\n");
      out.write("	<script>\n");
      out.write("	\n");
      out.write("	$(function(){\n");
      out.write("	\n");
      out.write("		$(\"#btn3\").click(function(){\n");
      out.write("		\n");
      out.write("			$.ajax({\n");
      out.write("				url:\"busroute.do\",\n");
      out.write("				success:function(data){\n");
      out.write("				\n");
      out.write("					const itemArr = data.msgBody.itemList;\n");
      out.write("					\n");
      out.write("					console.log(data);\n");
      out.write("					\n");
      out.write("					let value = \"\";\n");
      out.write("					\n");
      out.write("					for(let i in itemArr){\n");
      out.write("					\n");
      out.write("						console.log(itemArr[i]); //확인 후 주석\n");
      out.write("						\n");
      out.write("						let item = itemArr[i];\n");
      out.write("						\n");
      out.write("						// 화면에서 table tag안의 내용을 가져오는 코딩을 완성하시오\n");
      out.write("						\n");
      out.write("						$(\"#result3>tbody\").append(\"<tr>\"\n");
      out.write("														+ \"<td>\" + item.busRouteId +\"</td>\"\n");
      out.write("														+ \"<td>\" + item.busRouteNm +\"</td>\"\n");
      out.write("														+ \"<td>\" + item.length +\"</td>\"\n");
      out.write("														+ \"<td>\" + item.stStationNm +\"</td>\"\n");
      out.write("														+ \"<td>\" + item.edStationNm +\"</td>\"\n");
      out.write("														+ \"<td>\" + item.corpNm +\"</td>\"\n");
      out.write("													+\"</tr>\");\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("			})\n");
      out.write("		})\n");
      out.write("	})\n");
      out.write("\n");
      out.write("	</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
